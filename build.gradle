plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	
}

group = 'com.abc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.9'
}

tasks.named('test') {
	useJUnitPlatform()
}

String imageName = "${project.group}/${project.name}"
docker {
	dockerfile file('Dockerfile')
	dependsOn(tasks.findByPath("build"))
	name imageName
	files bootJar.archiveFile.get()
	buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])
}
dockerRun {
	name "${project.name}-container"
	image imageName
	ports '8081:8081'
	env 'SPRING_PROFILES_ACTIVE': 'dev'
	daemonize true
	clean false
}
